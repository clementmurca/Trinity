services:

  # Backend (Développement)
  backend-dev:
    container_name: container_back_dev
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "5001:5001"
    # env_file:
    # - ./backend/.env
    environment:
      - NODE_ENV=development
      - PORT=5001
      - MONGODB_URI=${MONGODB_URI}
      - JWT_SECRET=${JWT_SECRET}
      - JWT_EXPIRE=${JWT_EXPIRE}
      - REFRESH_TOKEN_SECRET=${REFRESH_TOKEN_SECRET}
      - REFRESH_TOKEN_SECRET=${REFRESH_TOKEN_SECRET}
      - GOOGLE_CLIENT_ID=${GOOGLE_CLIENT_ID}
      - GOOGLE_CLIENT_SECRET=${GOOGLE_CLIENT_SECRET}
      - STRIPE_SUCCESS_URL=${STRIPE_SUCCESS_URL}
      - STRIPE_CANCEL_URL=${STRIPE_CANCEL_URL}
      - STRIPE_SECRET_KEY=${STRIPE_SECRET_KEY}
      - STRIPE_PUBLIC_KEY=${STRIPE_PUBLIC_KEY}
      - STRIPE_WEBHOOK_SECRET=${STRIPE_WEBHOOK_SECRET}
    networks:
      - app_network
      - mobile-network
    command: ["npm", "start"]

  # Backend (Production)
  backend-prod:
    container_name: container_back_prod
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "5002:5002"
    environment:
      - NODE_ENV=production
      - PORT=5002
      - MONGODB_URI=${MONGODB_URI}
      - JWT_SECRET=${JWT_SECRET}
      - JWT_EXPIRE=${JWT_EXPIRE}
      - REFRESH_TOKEN_SECRET=${REFRESH_TOKEN_SECRET}
      - REFRESH_TOKEN_SECRET=${REFRESH_TOKEN_SECRET}
      - GOOGLE_CLIENT_ID=${GOOGLE_CLIENT_ID}
      - GOOGLE_CLIENT_SECRET=${GOOGLE_CLIENT_SECRET}
      - STRIPE_SUCCESS_URL=${STRIPE_SUCCESS_URL}
      - STRIPE_CANCEL_URL=${STRIPE_CANCEL_URL}
      - STRIPE_SECRET_KEY=${STRIPE_SECRET_KEY}
      - STRIPE_PUBLIC_KEY=${STRIPE_PUBLIC_KEY}
      - STRIPE_WEBHOOK_SECRET=${STRIPE_WEBHOOK_SECRET}
    networks:
      - app_network
    command: ["node", "server.js"]

  # Frontend (Développement)
  frontend-dev:
    container_name: container_front_dev
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "5173:5173"
    environment:
      - NODE_ENV=development
    networks:
      - app_network
    command: ["npm", "run", "dev"]

  # Frontend (Production)
  frontend-prod:
    container_name: container_front_prod
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "4173:4173"
    environment:
      - NODE_ENV=production
    networks:
      - app_network
    command: ["npm", "run", "preview"]

  # test
  backend-test:
    container_name: container_back_test
    build:
      context: ./backend
      dockerfile: Dockerfile
      target: test
    environment:
      - NODE_ENV=test
      - MONGODB_URI=${MONGODB_URI}
      - JWT_SECRET=${JWT_SECRET}
      - JWT_EXPIRE=${JWT_EXPIRE}
      - REFRESH_TOKEN_SECRET=${REFRESH_TOKEN_SECRET}
      - REFRESH_TOKEN_SECRET=${REFRESH_TOKEN_SECRET}
      - GOOGLE_CLIENT_ID=${GOOGLE_CLIENT_ID}
      - GOOGLE_CLIENT_SECRET=${GOOGLE_CLIENT_SECRET}
      - STRIPE_SUCCESS_URL=${STRIPE_SUCCESS_URL}
      - STRIPE_CANCEL_URL=${STRIPE_CANCEL_URL}
      - STRIPE_SECRET_KEY=${STRIPE_SECRET_KEY}
      - STRIPE_PUBLIC_KEY=${STRIPE_PUBLIC_KEY}
      - STRIPE_WEBHOOK_SECRET=${STRIPE_WEBHOOK_SECRET}
    networks:
      - app_network

  frontend-test:
    container_name: container_front_test
    build:
      context: ./frontend
      dockerfile: Dockerfile
      target: test
    environment:
      - NODE_ENV=test
      - MONGODB_URI=${MONGODB_URI}
      - JWT_SECRET=${JWT_SECRET}
      - JWT_EXPIRE=${JWT_EXPIRE}
      - REFRESH_TOKEN_SECRET=${REFRESH_TOKEN_SECRET}
      - GOOGLE_CLIENT_ID=${GOOGLE_CLIENT_ID}
      - GOOGLE_CLIENT_SECRET=${GOOGLE_CLIENT_SECRET}
    networks:
      - app_network

  mobile:
    build:
      context: ./trinity
      dockerfile: Dockerfile
    container_name: container_mobile
    ports:
      - "19000:19000"
      - "19001:19001"
      - "19002:19002"
      - "19006:19006"
      - "8081:8081"
      - "8082:8082"
    environment:
      - NODE_ENV=development
      - EXPO_NO_TELEMETRY=1
      - EXPO_DEVTOOLS_LISTEN_ADDRESS=0.0.0.0
      - REACT_NATIVE_PACKAGER_HOSTNAME=172.20.10.14
      - HOST_IP=172.20.10.14
      - EXPO_HOST=0.0.0.0
    stdin_open: true
    tty: true
    networks:
      - app_network
      - mobile-network
    command: ["npx", "expo", "start", "--lan", "--clear"]

networks:
  app_network:
    driver: bridge
  mobile-network:
    external: true